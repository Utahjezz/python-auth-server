{
  "openapi": "3.0.2",
  "info": {
    "title": "app",
    "version": "1.0.1"
  },
  "paths": {
    "/api/v1/healthz": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Healthz",
        "operationId": "healthz_api_v1_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "description": "Register a new user",
        "operationId": "register_api_v1_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "Login a user",
        "operationId": "login_api_v1_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/otp": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Otp Validation",
        "description": "Login a user with OTP",
        "operationId": "otp_validation_api_v1_login_otp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/login/token/validate": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Validate Token",
        "description": "Example of a protected endpoint",
        "operationId": "validate_token_api_v1_login_token_validate_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "LoginRequest": {
        "title": "LoginRequest",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "description": "Email of the user",
            "format": "email",
            "example": "joe.doe@email.com"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "Password of the user",
            "format": "password",
            "writeOnly": true,
            "example": "supersecret@#password"
          }
        }
      },
      "LoginResponse": {
        "title": "LoginResponse",
        "required": [
          "access_token"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string",
            "description": "Access token of the user"
          }
        }
      },
      "OtpRequest": {
        "title": "OtpRequest",
        "required": [
          "otp"
        ],
        "type": "object",
        "properties": {
          "otp": {
            "title": "Otp",
            "type": "string",
            "description": "OTP of the user",
            "example": "123456"
          }
        }
      },
      "RegisterUserRequest": {
        "title": "RegisterUserRequest",
        "required": [
          "email",
          "password",
          "first_name",
          "last_name"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "description": "Email of the user",
            "format": "email",
            "example": "joe.doe@email.com"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "description": "Password of the user",
            "format": "password",
            "writeOnly": true,
            "example": "supersecret@#password"
          },
          "first_name": {
            "title": "First Name",
            "type": "string",
            "description": "First name of the user",
            "example": "Joe"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string",
            "description": "Last name of the user",
            "example": "Doe"
          },
          "two_factor_enabled": {
            "title": "Two Factor Enabled",
            "type": "boolean",
            "description": "Two factor authentication enabled",
            "default": false,
            "example": true
          }
        }
      },
      "RegisterUserResponse": {
        "title": "RegisterUserResponse",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "description": "Id of the user",
            "example": "1234567890"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
